(* 
    Fedora language EBNF specification.

    references:
    https://en.wikipedia.org/wiki/Extended_Backusâ€“Naur_form
*)


(* BASIC TYPES *)
basicType = number | string | null | list | funCall;
indentificator = ?ANY UNICODE SYMBOL BUT NOT whitespace AND quote AND NOT STARTED FROM digit AND NOT equal?;
(* UTILITY *)
whitespace = ' ' | '\t' | '\n';
(* NUMBER *)
digit = '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9';
number = ['+' | '-'] , digit, {digit}, ['.' digit, {digit}];
(* STRING *)
quote = '"';
string = quote, {?ANY UNICODE SYMBOL BUT NOT quote?}, quote;
(* NULL *)
null = "null";
(* LIST *)
listOpen = '[';
listClose = ']';
list = listOpen, basicType {whitespace, basicType}, listClose;
(* FUNCALL *)
argument = basicType | funCall;
funCallOpen = '(';
funCallClose = ')';
funCall = indentificator, (funCallOpen, {argument}, funCallClose) | ();
(* FUNCTION *)
functionName = indentificator;
equal = '=';
functionArguments = {whitespace indentificator};
functionBody = whitespace, "where", whitespace, function, {function};
functionReturnable = basicType;
function = functionName, [functionArguments], [functionBody], equal, functionReturnable; 


code = function | funCall;
program = {code};
